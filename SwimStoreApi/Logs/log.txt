 G Application Starting Up!
 G HTTP "GET" "/" responded 200 in 22.1047 ms
08/24/2022 07:41:20 Application Starting Up!
08/24/2022 07:41:21 HTTP "GET" "/" responded 200 in 19.0800 ms
08/24/2022 07:43:53 Application Starting Up!
08/24/2022 07:43:54 HTTP "GET" "/" responded 200 in 20.5696 ms
08/24/2022 08:37:24 Application Starting Up!
08/24/2022 08:37:24 HTTP "GET" "/" responded 200 in 19.6300 ms
08/24/2022 09:31:09 Application Starting Up!
08/24/2022 09:31:09 HTTP "GET" "/" responded 200 in 19.0850 ms
08/24/2022 09:31:44 HTTP "POST" "/graphql" responded 200 in 599.9970 ms
08/24/2022 09:32:41 Application Starting Up!
08/24/2022 09:32:42 HTTP "GET" "/" responded 200 in 18.3406 ms
08/24/2022 09:33:02 Application Starting Up!
08/24/2022 09:33:03 HTTP "GET" "/" responded 200 in 22.1983 ms
08/24/2022 10:01:43 Application Starting Up!
08/24/2022 10:01:43 The application failed to start correctly.
System.InvalidOperationException: Unable to resolve service for type 'Serilog.Extensions.Hosting.DiagnosticContext' while attempting to activate 'Serilog.AspNetCore.RequestLoggingMiddleware'.
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_0.<UseMiddleware>b__0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.<ConfigureApplication>b__27_0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)
   at Microsoft.AspNetCore.Builder.WebApplication.Run(String url)
   at Program.<Main>$(String[] args) in C:\CODE\Personal Projects\SwimStore\SwimStoreApi\Program.cs:line 38
08/24/2022 10:01:53 Application Starting Up!
08/24/2022 10:01:53 The application failed to start correctly.
System.InvalidOperationException: Unable to resolve service for type 'Serilog.Extensions.Hosting.DiagnosticContext' while attempting to activate 'Serilog.AspNetCore.RequestLoggingMiddleware'.
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_0.<UseMiddleware>b__0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.<ConfigureApplication>b__27_0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)
   at Microsoft.AspNetCore.Builder.WebApplication.Run(String url)
   at Program.<Main>$(String[] args) in C:\CODE\Personal Projects\SwimStore\SwimStoreApi\Program.cs:line 38
08/24/2022 10:02:04 Application Starting Up!
08/24/2022 10:02:04 HTTP "GET" "/" responded 200 in 20.1238 ms
08/24/2022 10:03:08 Application Starting Up!
08/24/2022 10:03:09 HTTP "GET" "/" responded 200 in 21.3624 ms
08/24/2022 10:04:05 Application Starting Up!
08/24/2022 10:04:06 HTTP "GET" "/" responded 200 in 21.1222 ms
08/24/2022 10:07:49 Application Starting Up!
08/24/2022 10:07:49 HTTP "GET" "/" responded 200 in 20.5878 ms
08/24/2022 10:08:10 HTTP "POST" "/graphql" responded 500 in 5351.4754 ms
08/24/2022 10:09:10 Microsoft.AspNetCore.WebApplicationServiceCollection
08/24/2022 10:09:10 Application Starting Up!
08/24/2022 10:09:11 HTTP "GET" "/" responded 200 in 18.2176 ms
08/24/2022 10:09:38 System.Collections.Generic.List`1[Microsoft.Extensions.DependencyInjection.ServiceDescriptor]
08/24/2022 10:09:38 Application Starting Up!
08/24/2022 10:09:39 HTTP "GET" "/" responded 200 in 19.0370 ms
08/24/2022 10:16:03 Application Starting Up!
08/24/2022 10:16:04 HTTP "GET" "/" responded 200 in 21.3468 ms
08/24/2022 10:16:07 sf_product_get_all
08/24/2022 10:16:12 HTTP "POST" "/graphql" responded 500 in 5060.4435 ms
08/24/2022 10:16:51 Application Starting Up!
08/24/2022 10:16:51 HTTP "GET" "/" responded 200 in 23.2194 ms
08/24/2022 10:17:16 Application Starting Up!
08/24/2022 10:17:18 HTTP "GET" "/" responded 200 in 17.7439 ms
08/24/2022 10:17:22 Getting Product - In Query()
08/24/2022 10:17:22 sf_product_get_all
08/24/2022 10:17:27 HTTP "POST" "/graphql" responded 500 in 4861.2603 ms
08/24/2022 10:25:41 Application Starting Up!
08/24/2022 10:25:42 HTTP "GET" "/" responded 200 in 19.3244 ms
08/24/2022 10:25:48 sf_product_get_all
08/24/2022 10:25:53 HTTP "POST" "/graphql" responded 500 in 4840.5834 ms
08/24/2022 10:29:44 Application Starting Up!
08/24/2022 10:29:44 Application startup exception
System.InvalidOperationException: Unable to resolve service for type 'Serilog.Extensions.Hosting.DiagnosticContext' while attempting to activate 'Serilog.AspNetCore.RequestLoggingMiddleware'.
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_0.<UseMiddleware>b__0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.<ConfigureApplication>b__27_0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
08/24/2022 10:29:44 The application failed to start correctly.
System.InvalidOperationException: Unable to resolve service for type 'Serilog.Extensions.Hosting.DiagnosticContext' while attempting to activate 'Serilog.AspNetCore.RequestLoggingMiddleware'.
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass5_0.<UseMiddleware>b__0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.<ConfigureApplication>b__27_0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token)
   at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.Run(IHost host)
   at Microsoft.AspNetCore.Builder.WebApplication.Run(String url)
   at Program.<Main>$(String[] args) in C:\CODE\Personal Projects\SwimStore\SwimStoreApi\Program.cs:line 38
08/24/2022 10:29:52 Application Starting Up!
08/24/2022 10:29:53 HTTP "GET" "/" responded 200 in 18.7213 ms
08/24/2022 10:31:27 HTTP "GET" "/" responded 200 in 18.4056 ms
08/24/2022 10:32:17 HTTP "GET" "/" responded 200 in 19.5416 ms
08/24/2022 10:32:22 sf_product_get_all
08/24/2022 10:32:26 HTTP "POST" "/graphql" responded 500 in 4843.7617 ms
08/24/2022 10:33:07 sf_product_get_all
08/24/2022 10:35:41 HTTP "GET" "/" responded 200 in 24.3228 ms
08/24/2022 10:35:51 sf_product_get_all
08/24/2022 10:43:08 HTTP "GET" "/" responded 200 in 25.2169 ms
08/24/2022 10:43:13 sf_product_get_all
08/24/2022 10:43:14 HTTP "POST" "/graphql" responded 200 in 1338.3783 ms
08/24/2022 10:44:39 HTTP "GET" "/" responded 200 in 19.8797 ms
08/24/2022 10:44:42 SELECT *FROM product
08/24/2022 10:44:43 HTTP "POST" "/graphql" responded 500 in 1011.5210 ms
08/24/2022 10:45:00 HTTP "GET" "/" responded 200 in 19.6857 ms
08/24/2022 10:45:05 SELECT * FROM product
08/24/2022 10:45:05 HTTP "POST" "/graphql" responded 500 in 993.2995 ms
08/24/2022 10:45:19 SELECT * FROM product
08/24/2022 10:45:19 HTTP "POST" "/graphql" responded 500 in 33.7598 ms
08/24/2022 10:45:28 SELECT * FROM product;
08/24/2022 10:45:28 HTTP "POST" "/graphql" responded 500 in 36.2530 ms
08/24/2022 10:56:33 HTTP "GET" "/" responded 200 in 23.6356 ms
08/24/2022 10:56:39 SELECT * FROM product
08/24/2022 10:56:40 HTTP "POST" "/graphql" responded 200 in 962.3569 ms
08/24/2022 10:57:08 HTTP "GET" "/" responded 200 in 18.1487 ms
08/24/2022 10:57:11 SELECT * FROM product
08/24/2022 10:57:11 HTTP "POST" "/graphql" responded 500 in 1065.5438 ms
08/24/2022 10:57:12 SELECT * FROM product
08/24/2022 10:57:12 HTTP "POST" "/graphql" responded 500 in 34.1831 ms
08/24/2022 10:59:54 HTTP "GET" "/" responded 200 in 31.4799 ms
08/24/2022 10:59:57 SELECT * 
					        FROM product
08/24/2022 10:59:58 HTTP "POST" "/graphql" responded 500 in 953.1066 ms
08/24/2022 11:01:17 HTTP "GET" "/" responded 200 in 20.4297 ms
08/24/2022 11:01:30 SELECT * 
					        FROM product
08/24/2022 11:01:31 HTTP "POST" "/graphql" responded 500 in 933.5284 ms
08/24/2022 11:02:00 HTTP "GET" "/" responded 200 in 22.1025 ms
08/24/2022 11:02:07 
08/24/2022 11:02:08 HTTP "POST" "/graphql" responded 500 in 923.3443 ms
08/24/2022 11:02:14 
08/24/2022 11:02:14 HTTP "POST" "/graphql" responded 500 in 65.2945 ms
08/24/2022 11:02:31 product
08/24/2022 11:02:31 HTTP "POST" "/graphql" responded 500 in 68.2036 ms
08/24/2022 11:07:37 HTTP "GET" "/" responded 200 in 19.3088 ms
08/24/2022 11:07:41 product
08/24/2022 11:07:41 HTTP "POST" "/graphql" responded 500 in 967.2119 ms
08/24/2022 11:07:42 product
08/24/2022 11:07:42 HTTP "POST" "/graphql" responded 500 in 33.5694 ms
08/24/2022 11:07:44 product
08/24/2022 11:07:44 HTTP "POST" "/graphql" responded 500 in 38.2334 ms
08/24/2022 11:08:03 SELECT * 
							FROM product
08/24/2022 11:08:03 HTTP "POST" "/graphql" responded 200 in 60.0180 ms
08/24/2022 11:19:59 HTTP "GET" "/" responded 200 in 19.5742 ms
08/24/2022 11:20:02 "SELECT * 
							FROM product"
08/24/2022 11:20:03 HTTP "POST" "/graphql" responded 500 in 971.3828 ms
08/24/2022 11:22:24 HTTP "GET" "/" responded 200 in 19.2989 ms
08/24/2022 11:22:29 "SELECT * FROM product"
08/24/2022 11:22:29 HTTP "POST" "/graphql" responded 500 in 961.9201 ms
08/24/2022 11:22:43 "SELECT * 
FROM product"
08/24/2022 11:22:43 HTTP "POST" "/graphql" responded 500 in 33.4582 ms
08/24/2022 11:25:21 HTTP "GET" "/" responded 200 in 23.6300 ms
08/24/2022 11:25:25 "
SELECT *
                            FROM product"
08/24/2022 11:25:25 HTTP "POST" "/graphql" responded 500 in 978.3579 ms
08/24/2022 11:29:39 SQL: 
 "SELECT * 
FROM product"
08/24/2022 11:29:40 HTTP "POST" "/graphql" responded 500 in 40.5551 ms
08/24/2022 11:29:52 SQL: 
"SELECT * 
FROM product"
08/24/2022 11:29:53 HTTP "POST" "/graphql" responded 500 in 44.0350 ms
08/24/2022 11:30:21 SQL: 
"SELECT * 
FROM product"
08/24/2022 11:30:21 HTTP "POST" "/graphql" responded 500 in 30.0045 ms
08/24/2022 11:30:22 SQL: 
"SELECT * 
FROM product"
08/24/2022 11:30:22 HTTP "POST" "/graphql" responded 500 in 41.6641 ms
08/24/2022 11:30:32 SQL: 
"SELECT * 
FROM product"
08/24/2022 11:30:32 HTTP "POST" "/graphql" responded 200 in 91.6591 ms
08/24/2022 12:28:28 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:28:28 HTTP "POST" "/graphql" responded 200 in 39.3037 ms
08/24/2022 12:28:30 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:28:30 HTTP "POST" "/graphql" responded 200 in 4.3164 ms
08/24/2022 12:28:31 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:28:31 HTTP "POST" "/graphql" responded 200 in 4.3330 ms
08/24/2022 12:44:26 HTTP "GET" "/" responded 200 in 24.8644 ms
08/24/2022 12:44:29 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:44:29 HTTP "POST" "/graphql" responded 200 in 1021.2759 ms
08/24/2022 12:44:31 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:44:31 HTTP "POST" "/graphql" responded 200 in 8.1013 ms
08/24/2022 12:44:32 HTTP "POST" "/graphql" responded 200 in 47.5288 ms
08/24/2022 12:44:34 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:44:34 HTTP "POST" "/graphql" responded 200 in 26.8873 ms
08/24/2022 12:44:40 HTTP "POST" "/graphql" responded 200 in 1.0679 ms
08/24/2022 12:44:42 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:44:42 HTTP "POST" "/graphql" responded 200 in 4.3590 ms
08/24/2022 12:44:43 HTTP "POST" "/graphql" responded 200 in 0.7794 ms
08/24/2022 12:44:44 SQL: 
"SELECT * 
FROM product"
08/24/2022 12:44:44 HTTP "POST" "/graphql" responded 200 in 8.1220 ms
08/24/2022 12:44:45 HTTP "POST" "/graphql" responded 200 in 0.8424 ms
08/24/2022 12:44:48 HTTP "POST" "/graphql" responded 200 in 0.7891 ms
08/25/2022 13:27:34 HTTP "GET" "/" responded 200 in 27.9066 ms
08/25/2022 13:27:43 HTTP "POST" "/graphql" responded 200 in 596.8577 ms
08/25/2022 13:27:43 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:27:47 HTTP "POST" "/graphql" responded 500 in 4548.8667 ms
08/25/2022 13:27:49 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:27:53 HTTP "POST" "/graphql" responded 500 in 4134.5164 ms
08/25/2022 13:29:47 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:29:48 HTTP "POST" "/graphql" responded 200 in 430.9617 ms
08/25/2022 13:47:17 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:47:17 HTTP "POST" "/graphql" responded 200 in 1040.5982 ms
08/25/2022 13:47:19 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:47:19 HTTP "POST" "/graphql" responded 200 in 7.6769 ms
08/25/2022 13:47:23 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:47:23 HTTP "POST" "/graphql" responded 200 in 4.5361 ms
08/25/2022 13:52:41 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:52:42 HTTP "POST" "/graphql" responded 200 in 982.1267 ms
08/25/2022 13:52:45 SQL: 
"SELECT * 
FROM product"
08/25/2022 13:52:45 HTTP "POST" "/graphql" responded 200 in 7.9882 ms
08/25/2022 14:11:29 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:11:29 HTTP "POST" "/graphql" responded 200 in 964.9291 ms
08/25/2022 14:11:34 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:11:34 HTTP "POST" "/graphql" responded 200 in 38.1608 ms
08/25/2022 14:11:41 HTTP "POST" "/graphql" responded 200 in 52.8538 ms
08/25/2022 14:11:42 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:11:42 HTTP "POST" "/graphql" responded 200 in 26.1659 ms
08/25/2022 14:11:47 HTTP "POST" "/graphql" responded 200 in 1.0498 ms
08/25/2022 14:11:48 HTTP "POST" "/graphql" responded 200 in 0.7449 ms
08/25/2022 14:11:50 HTTP "POST" "/graphql" responded 200 in 1.0522 ms
08/25/2022 14:15:40 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:15:40 HTTP "POST" "/graphql" responded 200 in 1066.9206 ms
08/25/2022 14:15:45 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:15:45 HTTP "POST" "/graphql" responded 200 in 9.0637 ms
08/25/2022 14:15:56 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:15:56 HTTP "POST" "/graphql" responded 200 in 5.2609 ms
08/25/2022 14:15:57 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:15:57 HTTP "POST" "/graphql" responded 200 in 3.9194 ms
08/25/2022 14:16:00 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:16:00 HTTP "POST" "/graphql" responded 200 in 4.6391 ms
08/25/2022 14:16:01 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:16:01 HTTP "POST" "/graphql" responded 200 in 4.3101 ms
08/25/2022 14:16:15 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:16:15 HTTP "POST" "/graphql" responded 200 in 971.5449 ms
08/25/2022 14:16:17 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:16:17 HTTP "POST" "/graphql" responded 200 in 7.9383 ms
08/25/2022 14:16:53 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:16:54 HTTP "POST" "/graphql" responded 200 in 1092.2367 ms
08/25/2022 14:16:55 SQL: 
"SELECT * 
FROM product"
08/25/2022 14:16:55 HTTP "POST" "/graphql" responded 200 in 8.2452 ms
08/25/2022 14:33:10 HTTP "POST" "/graphql" responded 200 in 625.1890 ms
08/25/2022 14:33:11 SQL: 
"SELECT * 
FROM product
Where brand = {brand}"
08/25/2022 14:33:12 HTTP "POST" "/graphql" responded 500 in 476.2578 ms
08/25/2022 14:35:19 SQL: 
"SELECT * 
FROM product
Where brand = @brand"
08/25/2022 14:35:19 HTTP "POST" "/graphql" responded 200 in 75.6676 ms
08/25/2022 14:35:21 SQL: 
"SELECT * 
FROM product
Where brand = @brand"
08/25/2022 14:35:21 HTTP "POST" "/graphql" responded 200 in 4.2832 ms
08/25/2022 14:35:23 HTTP "POST" "/graphql" responded 200 in 1.2090 ms
08/25/2022 14:35:24 SQL: 
"SELECT * 
FROM product
Where brand = @brand"
08/25/2022 14:35:24 HTTP "POST" "/graphql" responded 200 in 13.3846 ms
08/25/2022 14:35:25 SQL: 
"SELECT * 
FROM product
Where brand = @brand"
08/25/2022 14:35:25 HTTP "POST" "/graphql" responded 200 in 3.7776 ms
08/25/2022 14:35:26 SQL: 
"SELECT * 
FROM product
Where brand = @brand"
08/25/2022 14:35:26 HTTP "POST" "/graphql" responded 200 in 4.3138 ms
08/25/2022 14:35:27 HTTP "POST" "/graphql" responded 200 in 0.8269 ms
08/25/2022 14:50:57 HTTP "POST" "/graphql" responded 200 in 957.9485 ms
08/25/2022 14:51:05 HTTP "POST" "/graphql" responded 200 in 7.2780 ms
08/25/2022 14:51:06 HTTP "POST" "/graphql" responded 200 in 3.9968 ms
08/25/2022 14:51:06 HTTP "POST" "/graphql" responded 200 in 3.3372 ms
08/25/2022 14:51:06 HTTP "POST" "/graphql" responded 200 in 3.3412 ms
08/25/2022 14:51:06 HTTP "POST" "/graphql" responded 200 in 3.2109 ms
08/25/2022 14:51:06 HTTP "POST" "/graphql" responded 200 in 3.3238 ms
08/25/2022 14:51:07 HTTP "POST" "/graphql" responded 200 in 3.5281 ms
08/25/2022 14:51:07 HTTP "POST" "/graphql" responded 200 in 2.8210 ms
08/25/2022 14:51:10 HTTP "POST" "/graphql" responded 200 in 48.5104 ms
08/25/2022 14:51:11 HTTP "POST" "/graphql" responded 200 in 3.3945 ms
08/25/2022 14:51:12 HTTP "POST" "/graphql" responded 200 in 2.7546 ms
08/25/2022 14:51:12 HTTP "POST" "/graphql" responded 200 in 2.9713 ms
08/25/2022 14:51:12 HTTP "POST" "/graphql" responded 200 in 3.1718 ms
08/25/2022 14:51:13 HTTP "POST" "/graphql" responded 200 in 2.7712 ms
08/25/2022 14:51:13 HTTP "POST" "/graphql" responded 200 in 2.9452 ms
08/25/2022 14:51:15 HTTP "POST" "/graphql" responded 200 in 3.3103 ms
08/25/2022 14:52:29 ====== Postgres Call -> Stored Function ======
"sf_product_get_all"
08/25/2022 14:52:29 HTTP "POST" "/graphql" responded 200 in 987.2373 ms
08/25/2022 14:52:37 ====== Postgres Call -> Stored Function ======
"sf_product_get_all"
08/25/2022 14:52:37 HTTP "POST" "/graphql" responded 200 in 8.5888 ms
08/25/2022 14:52:39 ====== Postgres Call -> Stored Function ======
"sf_product_get_all"
08/25/2022 14:52:39 HTTP "POST" "/graphql" responded 200 in 4.8238 ms
08/25/2022 14:53:04 ====== Postgres Call -> Stored Function ======
		"sf_product_get_all"
08/25/2022 14:53:04 HTTP "POST" "/graphql" responded 200 in 991.1210 ms
08/25/2022 14:53:26 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 14:53:27 HTTP "POST" "/graphql" responded 200 in 996.3529 ms
08/25/2022 14:54:15 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 14:54:15 HTTP "POST" "/graphql" responded 200 in 1038.5308 ms
08/25/2022 16:26:54 HTTP "POST" "/graphql" responded 200 in 625.6003 ms
08/25/2022 16:26:54 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 16:26:55 HTTP "POST" "/graphql" responded 200 in 455.0724 ms
08/25/2022 16:26:56 HTTP "POST" "/graphql" responded 200 in 1.9149 ms
08/25/2022 16:26:57 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 16:26:57 HTTP "POST" "/graphql" responded 200 in 27.7118 ms
08/25/2022 16:26:59 HTTP "POST" "/graphql" responded 200 in 0.8519 ms
08/25/2022 16:27:14 HTTP "POST" "/graphql" responded 200 in 0.9752 ms
08/25/2022 16:27:28 HTTP "POST" "/graphql" responded 200 in 0.7660 ms
08/25/2022 16:27:32 HTTP "POST" "/graphql" responded 200 in 1.1854 ms
08/25/2022 16:27:36 HTTP "POST" "/graphql" responded 200 in 0.9049 ms
08/25/2022 16:28:58 HTTP "GET" "/graphql-voyager" responded 404 in 0.0309 ms
08/25/2022 16:32:49 HTTP "POST" "/graphql" responded 200 in 619.5005 ms
08/25/2022 16:32:52 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 16:32:52 HTTP "POST" "/graphql" responded 200 in 382.4042 ms
08/25/2022 16:33:58 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 16:33:58 HTTP "POST" "/graphql" responded 200 in 7.9051 ms
08/25/2022 16:34:01 HTTP "POST" "/graphql" responded 200 in 1.0318 ms
08/25/2022 16:34:02 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 16:34:02 HTTP "POST" "/graphql" responded 200 in 3.9455 ms
08/25/2022 16:34:04 HTTP "POST" "/graphql" responded 200 in 0.7846 ms
08/25/2022 16:34:05 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 16:34:05 HTTP "POST" "/graphql" responded 200 in 22.2866 ms
08/25/2022 16:34:08 HTTP "POST" "/graphql" responded 200 in 0.7596 ms
08/25/2022 16:34:09 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 16:34:09 HTTP "POST" "/graphql" responded 200 in 4.0992 ms
08/25/2022 16:37:30 HTTP "GET" "/graphql-voyager" responded 200 in 101.5100 ms
08/25/2022 16:37:31 HTTP "POST" "/graphql" responded 200 in 648.2033 ms
08/25/2022 16:39:05 HTTP "GET" "/graphql-voyager" responded 200 in 66.0717 ms
08/25/2022 16:39:06 HTTP "POST" "/graphql" responded 200 in 648.3458 ms
08/25/2022 16:39:45 HTTP "POST" "/graphql" responded 200 in 6.2942 ms
08/25/2022 16:39:46 HTTP "POST" "/graphql" responded 200 in 2.8205 ms
08/25/2022 18:08:04 HTTP "POST" "/graphql" responded 200 in 675.1871 ms
08/25/2022 18:08:07 HTTP "POST" "/graphql" responded 200 in 1.6886 ms
08/25/2022 18:08:08 HTTP "POST" "/graphql" responded 200 in 2.1443 ms
08/25/2022 18:08:10 HTTP "POST" "/graphql" responded 200 in 0.8320 ms
08/25/2022 18:08:11 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:08:15 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:08:16 HTTP "POST" "/graphql" responded 500 in 4586.2233 ms
08/25/2022 18:08:19 HTTP "POST" "/graphql" responded 200 in 4080.6926 ms
08/25/2022 18:08:57 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:08:58 HTTP "POST" "/graphql" responded 200 in 374.1224 ms
08/25/2022 18:09:09 HTTP "POST" "/graphql" responded 200 in 1.0114 ms
08/25/2022 18:09:11 HTTP "POST" "/graphql" responded 200 in 1.0633 ms
08/25/2022 18:09:33 HTTP "GET" "/graphql-voyager" responded 200 in 77.2143 ms
08/25/2022 18:09:33 HTTP "POST" "/graphql" responded 200 in 1.3252 ms
08/25/2022 18:09:33 HTTP "GET" "/favicon.ico" responded 404 in 0.0618 ms
08/25/2022 18:12:09 HTTP "GET" "/graphql-voyager" responded 200 in 130.4715 ms
08/25/2022 18:12:10 HTTP "POST" "/graphql" responded 200 in 669.9622 ms
08/25/2022 18:19:55 HTTP "POST" "/graphql" responded 500 in 148.3774 ms
08/25/2022 18:22:33 HTTP "POST" "/graphql" responded 500 in 611.2510 ms
08/25/2022 18:22:35 HTTP "POST" "/graphql" responded 500 in 1.7959 ms
08/25/2022 18:22:37 HTTP "POST" "/graphql" responded 500 in 1.7800 ms
08/25/2022 18:22:45 HTTP "POST" "/graphql" responded 500 in 0.7732 ms
08/25/2022 18:23:44 HTTP "POST" "/graphql" responded 200 in 609.6548 ms
08/25/2022 18:23:45 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:23:45 HTTP "POST" "/graphql" responded 200 in 556.6983 ms
08/25/2022 18:23:46 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:23:46 HTTP "POST" "/graphql" responded 200 in 8.5113 ms
08/25/2022 18:23:47 HTTP "POST" "/graphql" responded 200 in 1.1425 ms
08/25/2022 18:23:48 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:23:48 HTTP "POST" "/graphql" responded 200 in 4.1988 ms
08/25/2022 18:23:49 HTTP "POST" "/graphql" responded 200 in 0.8951 ms
08/25/2022 18:23:50 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:23:50 HTTP "POST" "/graphql" responded 200 in 26.9644 ms
08/25/2022 18:23:58 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:23:58 HTTP "POST" "/graphql" responded 200 in 4.8842 ms
08/25/2022 18:24:34 HTTP "POST" "/graphql" responded 200 in 0.8100 ms
08/25/2022 18:24:35 HTTP "POST" "/graphql" responded 500 in 30.1779 ms
08/25/2022 18:25:50 HTTP "POST" "/graphql" responded 200 in 620.9402 ms
08/25/2022 18:25:50 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:25:51 HTTP "POST" "/graphql" responded 200 in 380.8893 ms
08/25/2022 18:25:53 HTTP "POST" "/graphql" responded 200 in 2.3020 ms
08/25/2022 18:25:54 HTTP "POST" "/graphql" responded 200 in 0.9510 ms
08/25/2022 18:25:59 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:25:59 HTTP "POST" "/graphql" responded 200 in 25.7345 ms
08/25/2022 18:26:01 HTTP "POST" "/graphql" responded 200 in 1.2998 ms
08/25/2022 18:26:08 ====== Postgres Call -> SQL ======
	"INSERT INTO product(name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:26:08 HTTP "POST" "/graphql" responded 500 in 6549.9400 ms
08/25/2022 18:27:47 ====== Postgres Call -> SQL ======
	"INSERT INTO product(name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:27:48 HTTP "POST" "/graphql" responded 500 in 45.3235 ms
08/25/2022 18:28:24 HTTP "POST" "/graphql" responded 200 in 611.9720 ms
08/25/2022 18:28:24 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:28:24 HTTP "POST" "/graphql" responded 200 in 379.7459 ms
08/25/2022 18:28:45 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:28:45 HTTP "POST" "/graphql" responded 200 in 8.2010 ms
08/25/2022 18:28:46 HTTP "POST" "/graphql" responded 200 in 0.9536 ms
08/25/2022 18:28:47 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:28:47 HTTP "POST" "/graphql" responded 500 in 116.1132 ms
08/25/2022 18:29:06 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:29:20 HTTP "POST" "/graphql" responded 500 in 22740.9618 ms
08/25/2022 18:29:34 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:45:40 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:45:41 HTTP "POST" "/graphql" responded 500 in 5331.6570 ms
08/25/2022 18:46:33 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:46:33 HTTP "POST" "/graphql" responded 500 in 747.2145 ms
08/25/2022 18:46:40 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:46:40 HTTP "POST" "/graphql" responded 500 in 52.8246 ms
08/25/2022 18:47:05 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:47:16 HTTP "POST" "/graphql" responded 500 in 17012.8669 ms
08/25/2022 18:47:20 HTTP "POST" "/graphql" responded 200 in 39.7964 ms
08/25/2022 18:47:21 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:47:21 HTTP "POST" "/graphql" responded 200 in 347.9557 ms
08/25/2022 18:47:23 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:47:23 HTTP "POST" "/graphql" responded 200 in 6.9458 ms
08/25/2022 18:47:24 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:47:24 HTTP "POST" "/graphql" responded 200 in 3.4823 ms
08/25/2022 18:47:34 HTTP "POST" "/graphql" responded 200 in 1.0256 ms
08/25/2022 18:48:04 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:50:24 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:50:25 HTTP "POST" "/graphql" responded 200 in 954.0186 ms
08/25/2022 18:50:30 HTTP "POST" "/graphql" responded 200 in 80.3832 ms
08/25/2022 18:50:31 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:50:31 HTTP "POST" "/graphql" responded 200 in 25.3695 ms
08/25/2022 18:50:35 HTTP "POST" "/graphql" responded 200 in 1.4703 ms
08/25/2022 18:50:44 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:52:25 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:52:25 HTTP "POST" "/graphql" responded 200 in 639.5585 ms
08/25/2022 18:52:25 HTTP "POST" "/graphql" responded 200 in 410.8815 ms
08/25/2022 18:52:31 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:52:31 HTTP "POST" "/graphql" responded 200 in 8.0798 ms
08/25/2022 18:52:34 HTTP "POST" "/graphql" responded 200 in 0.9985 ms
08/25/2022 18:52:34 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:52:34 HTTP "POST" "/graphql" responded 200 in 3.9263 ms
08/25/2022 18:52:40 HTTP "POST" "/graphql" responded 200 in 0.8912 ms
08/25/2022 18:52:43 HTTP "POST" "/graphql" responded 200 in 0.8804 ms
08/25/2022 18:52:46 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:52:46 HTTP "POST" "/graphql" responded 200 in 3.9800 ms
08/25/2022 18:52:49 HTTP "POST" "/graphql" responded 200 in 0.8563 ms
08/25/2022 18:52:53 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:53:42 Format of the initialization string does not conform to specification starting at index 0.
08/25/2022 18:53:43 HTTP "POST" "/graphql" responded 500 in 52921.5026 ms
08/25/2022 18:55:35 HTTP "POST" "/graphql" responded 200 in 622.6155 ms
08/25/2022 18:55:35 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 18:55:35 HTTP "POST" "/graphql" responded 200 in 374.7051 ms
08/25/2022 18:55:37 HTTP "POST" "/graphql" responded 200 in 2.0431 ms
08/25/2022 18:55:42 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 18:56:20 23505: duplicate key value violates unique constraint "product_pkey"

DETAIL: Detail redacted as it may contain sensitive data. Specify 'Include Error Detail' in the connection string to include this information.
08/25/2022 18:56:20 HTTP "POST" "/graphql" responded 500 in 42302.0389 ms
08/25/2022 19:05:02 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:05:23 HTTP "POST" "/graphql" responded 500 in 21300.4109 ms
08/25/2022 19:05:47 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:05:47 HTTP "POST" "/graphql" responded 500 in 1079.4120 ms
08/25/2022 19:06:24 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:06:24 HTTP "POST" "/graphql" responded 500 in 29.0458 ms
08/25/2022 19:08:01 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:08:01 HTTP "POST" "/graphql" responded 500 in 20.7919 ms
08/25/2022 19:09:34 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:09:35 HTTP "POST" "/graphql" responded 500 in 1040.1120 ms
08/25/2022 19:11:23 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:11:23 HTTP "POST" "/graphql" responded 500 in 30.5118 ms
08/25/2022 19:11:29 HTTP "POST" "/graphql" responded 200 in 39.8724 ms
08/25/2022 19:11:30 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 19:11:30 HTTP "POST" "/graphql" responded 200 in 31.2915 ms
08/25/2022 19:11:46 HTTP "POST" "/graphql" responded 200 in 1.4716 ms
08/25/2022 19:13:03 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:14:11 HTTP "POST" "/graphql" responded 500 in 84179.2029 ms
08/25/2022 19:15:34 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:15:39 HTTP "POST" "/graphql" responded 500 in 12993.2738 ms
08/25/2022 19:18:10 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:18:26 HTTP "POST" "/graphql" responded 500 in 24232.3318 ms
08/25/2022 19:20:35 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:20:56 HTTP "POST" "/graphql" responded 500 in 20795.1529 ms
08/25/2022 19:21:48 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:21:56 HTTP "POST" "/graphql" responded 200 in 8344.6707 ms
08/25/2022 19:27:53 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 19:27:53 HTTP "POST" "/graphql" responded 200 in 977.4108 ms
08/25/2022 19:27:57 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 19:27:57 HTTP "POST" "/graphql" responded 200 in 7.6635 ms
08/25/2022 19:27:59 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 19:27:59 HTTP "POST" "/graphql" responded 200 in 6.3289 ms
08/25/2022 19:28:09 HTTP "POST" "/graphql" responded 200 in 59.2412 ms
08/25/2022 19:28:50 ====== Postgres Call -> SQL ======
	"INSERT INTO product (name, original_price, current_price, quantity_in_stock, brand, gender)
VALUES (@name, @original_price, @current_price, @quantity_in_stock, @brand, @gender)
RETURNING *"
08/25/2022 19:28:50 HTTP "POST" "/graphql" responded 200 in 85.2548 ms
08/25/2022 19:28:52 HTTP "POST" "/graphql" responded 200 in 1.0310 ms
08/25/2022 19:28:53 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 19:28:53 HTTP "POST" "/graphql" responded 200 in 4.1186 ms
08/25/2022 19:36:02 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 19:36:03 HTTP "POST" "/graphql" responded 200 in 966.9424 ms
08/25/2022 20:38:30 HTTP "POST" "/graphql" responded 200 in 669.2980 ms
08/25/2022 20:38:32 HTTP "POST" "/graphql" responded 200 in 2.0352 ms
08/25/2022 20:38:42 HTTP "POST" "/graphql" responded 200 in 2.2908 ms
08/25/2022 20:38:45 HTTP "POST" "/graphql" responded 200 in 1.5193 ms
08/25/2022 20:38:46 HTTP "POST" "/graphql" responded 200 in 0.8501 ms
08/25/2022 20:39:22 HTTP "POST" "/graphql" responded 200 in 0.9210 ms
08/25/2022 20:39:24 HTTP "POST" "/graphql" responded 200 in 1.2989 ms
08/25/2022 20:39:26 HTTP "POST" "/graphql" responded 200 in 0.9185 ms
08/25/2022 20:39:29 HTTP "POST" "/graphql" responded 200 in 0.9284 ms
08/25/2022 20:39:37 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender)
WHERE id = @id 
RETURNING *"
08/25/2022 20:39:38 HTTP "POST" "/graphql" responded 500 in 857.9580 ms
08/25/2022 20:44:00 HTTP "POST" "/graphql" responded 200 in 1.2417 ms
08/25/2022 20:44:01 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 20:44:01 HTTP "POST" "/graphql" responded 200 in 74.1984 ms
08/25/2022 20:44:07 HTTP "POST" "/graphql" responded 200 in 0.8660 ms
08/25/2022 20:44:12 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender)
WHERE id = @id 
RETURNING *"
08/25/2022 20:44:12 HTTP "POST" "/graphql" responded 500 in 54.5612 ms
08/25/2022 20:44:16 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender)
WHERE id = @id 
RETURNING *"
08/25/2022 20:44:16 HTTP "POST" "/graphql" responded 500 in 52.6213 ms
08/25/2022 20:45:03 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 20:45:03 HTTP "POST" "/graphql" responded 200 in 650.6218 ms
08/25/2022 20:45:03 HTTP "POST" "/graphql" responded 200 in 474.7347 ms
08/25/2022 20:45:07 HTTP "POST" "/graphql" responded 200 in 1.9728 ms
08/25/2022 20:45:08 ====== Postgres Call -> SQL ======
	"Update product
SET name = '@name', original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = '@brand', gender = '@gender'
WHERE id = @id 
RETURNING *"
08/25/2022 20:45:08 HTTP "POST" "/graphql" responded 500 in 151.3847 ms
08/25/2022 20:45:35 HTTP "POST" "/graphql" responded 200 in 639.8537 ms
08/25/2022 20:45:35 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/25/2022 20:45:36 HTTP "POST" "/graphql" responded 200 in 378.4239 ms
08/25/2022 20:45:38 HTTP "POST" "/graphql" responded 200 in 2.0772 ms
08/25/2022 20:45:43 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
08/25/2022 20:45:43 HTTP "POST" "/graphql" responded 200 in 103.1180 ms
08/25/2022 20:46:10 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
08/25/2022 20:46:10 HTTP "POST" "/graphql" responded 200 in 5.8469 ms
08/25/2022 20:47:25 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
08/25/2022 20:47:25 HTTP "POST" "/graphql" responded 500 in 110.1035 ms
08/26/2022 11:44:31 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
08/26/2022 11:44:32 HTTP "POST" "/graphql" responded 200 in 1226.2334 ms
08/26/2022 11:44:41 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
08/26/2022 11:44:41 HTTP "POST" "/graphql" responded 200 in 9.9021 ms
08/26/2022 11:44:44 HTTP "POST" "/graphql" responded 200 in 42.0275 ms
08/26/2022 11:44:45 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/26/2022 11:44:45 HTTP "POST" "/graphql" responded 200 in 33.6763 ms
08/26/2022 11:44:48 HTTP "POST" "/graphql" responded 200 in 1.5926 ms
08/26/2022 11:45:00 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
08/26/2022 11:45:00 HTTP "POST" "/graphql" responded 200 in 5.7039 ms
08/29/2022 15:41:10 HTTP "POST" "/graphql" responded 200 in 776.1513 ms
08/29/2022 15:41:10 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/29/2022 15:41:10 HTTP "POST" "/graphql" responded 200 in 1290.6767 ms
08/29/2022 15:41:15 HTTP "POST" "/graphql" responded 200 in 2.3092 ms
08/29/2022 15:41:20 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
08/29/2022 15:41:20 HTTP "POST" "/graphql" responded 200 in 145.0702 ms
08/29/2022 15:41:23 HTTP "POST" "/graphql" responded 200 in 1.4678 ms
08/29/2022 15:41:24 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/29/2022 15:41:24 HTTP "POST" "/graphql" responded 200 in 4.4391 ms
08/29/2022 15:41:28 HTTP "POST" "/graphql" responded 200 in 1.2761 ms
08/29/2022 15:41:29 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/29/2022 15:41:29 HTTP "POST" "/graphql" responded 200 in 3.8827 ms
08/29/2022 15:41:35 HTTP "POST" "/graphql" responded 200 in 1.1724 ms
08/29/2022 15:41:36 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
08/29/2022 15:41:36 HTTP "POST" "/graphql" responded 200 in 19.3471 ms
09/13/2022 15:54:06 HTTP "POST" "/graphql" responded 200 in 792.6177 ms
09/13/2022 15:56:47 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/13/2022 15:56:52 HTTP "POST" "/graphql" responded 500 in 4622.8438 ms
09/13/2022 16:01:46 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/13/2022 16:01:50 HTTP "POST" "/graphql" responded 200 in 3937.1516 ms
09/14/2022 08:42:08 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:42:09 HTTP "POST" "/graphql" responded 200 in 1370.6445 ms
09/14/2022 08:42:12 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:42:12 HTTP "POST" "/graphql" responded 200 in 7.5976 ms
09/14/2022 08:42:13 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:42:13 HTTP "POST" "/graphql" responded 200 in 4.5774 ms
09/14/2022 08:42:14 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:42:14 HTTP "POST" "/graphql" responded 200 in 5.1431 ms
09/14/2022 08:42:15 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:42:15 HTTP "POST" "/graphql" responded 200 in 3.7901 ms
09/14/2022 08:42:16 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:42:16 HTTP "POST" "/graphql" responded 200 in 4.0122 ms
09/14/2022 08:44:34 HTTP "POST" "/graphql" responded 200 in 50.9096 ms
09/14/2022 08:44:41 HTTP "POST" "/graphql" responded 200 in 1.0449 ms
09/14/2022 08:44:43 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:44:43 HTTP "POST" "/graphql" responded 200 in 4.4136 ms
09/14/2022 08:44:45 HTTP "POST" "/graphql" responded 200 in 1.0739 ms
09/14/2022 08:44:49 HTTP "POST" "/graphql" responded 200 in 1.0285 ms
09/14/2022 08:44:50 HTTP "POST" "/graphql" responded 200 in 0.8898 ms
09/14/2022 08:44:51 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:44:52 HTTP "POST" "/graphql" responded 200 in 28.3526 ms
09/14/2022 08:44:56 HTTP "POST" "/graphql" responded 200 in 0.9073 ms
09/14/2022 08:45:02 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:45:02 HTTP "POST" "/graphql" responded 200 in 4.0843 ms
09/14/2022 08:45:05 HTTP "POST" "/graphql" responded 200 in 0.9344 ms
09/14/2022 08:45:19 HTTP "POST" "/graphql" responded 200 in 1.0120 ms
09/14/2022 08:45:20 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:45:20 HTTP "POST" "/graphql" responded 200 in 6.2921 ms
09/14/2022 08:45:30 HTTP "POST" "/graphql" responded 200 in 0.9517 ms
09/14/2022 08:45:41 HTTP "POST" "/graphql" responded 200 in 0.9701 ms
09/14/2022 08:45:42 HTTP "POST" "/graphql" responded 200 in 1.0281 ms
09/14/2022 08:45:54 HTTP "POST" "/graphql" responded 200 in 1.5659 ms
09/14/2022 08:45:58 HTTP "POST" "/graphql" responded 200 in 0.8656 ms
09/14/2022 08:45:59 HTTP "POST" "/graphql" responded 200 in 0.8789 ms
09/14/2022 08:46:01 HTTP "POST" "/graphql" responded 200 in 0.8552 ms
09/14/2022 08:46:01 HTTP "POST" "/graphql" responded 200 in 0.8795 ms
09/14/2022 08:46:19 HTTP "GET" "/graphql-voyager" responded 200 in 77.2210 ms
09/14/2022 08:46:21 HTTP "POST" "/graphql" responded 200 in 1.9633 ms
09/14/2022 08:46:21 HTTP "GET" "/favicon.ico" responded 404 in 0.0723 ms
09/14/2022 08:50:07 HTTP "POST" "/graphql" responded 200 in 1.6079 ms
09/14/2022 08:50:11 HTTP "POST" "/graphql" responded 200 in 0.9411 ms
09/14/2022 08:50:34 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
09/14/2022 08:50:34 HTTP "POST" "/graphql" responded 200 in 176.9125 ms
09/14/2022 08:50:46 HTTP "POST" "/graphql" responded 200 in 0.9223 ms
09/14/2022 08:50:47 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:50:47 HTTP "POST" "/graphql" responded 200 in 5.5568 ms
09/14/2022 08:50:55 HTTP "POST" "/graphql" responded 200 in 0.8938 ms
09/14/2022 08:51:10 ====== Postgres Call -> SQL ======
	"Update product
SET name = @name, original_price = @original_price, current_price = @current_price, quantity_in_stock = @quantity_in_stock, brand = @brand, gender = @gender
WHERE id = @id 
RETURNING *"
09/14/2022 08:51:10 HTTP "POST" "/graphql" responded 200 in 5.0191 ms
09/14/2022 08:51:13 HTTP "POST" "/graphql" responded 200 in 1.0283 ms
09/14/2022 08:51:15 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
09/14/2022 08:51:15 HTTP "POST" "/graphql" responded 200 in 4.1559 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql" responded 301 in 13.8901 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/index.html" responded 200 in 122.8028 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/main.b66740cb.js" responded 200 in 42.2166 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/css/main.91faccc5.css" responded 200 in 41.4888 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/601.725d3873.js" responded 200 in 46.0608 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/14.c7f124f0.chunk.js" responded 200 in 4.6038 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/996.e07faaf0.chunk.js" responded 200 in 4.7786 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/502.42e91a67.chunk.js" responded 200 in 23.0059 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/favicon.svg" responded 200 in 1.5894 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/manifest.webmanifest" responded 200 in 1.0368 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/favicon.ico" responded 200 in 6.1261 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/696.37f75272.chunk.js" responded 200 in 0.5144 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/338.5d3af481.chunk.js" responded 200 in 0.8093 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/css/645.4594131c.chunk.css" responded 200 in 1.0123 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/27.ba4cc8cb.chunk.js" responded 200 in 2.2790 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/400.a44ded47.chunk.js" responded 200 in 0.5755 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/498.bacf030a.chunk.js" responded 200 in 4.6583 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/329.d8262f45.chunk.js" responded 200 in 17.3557 ms
10/18/2022 11:12:54 HTTP "GET" "/graphql/static/js/645.5c961458.chunk.js" responded 200 in 43.4097 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/808.4d7b0362.chunk.js" responded 200 in 0.3313 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/document.467d4add.chunk.js" responded 200 in 2.8722 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/257.affcdb08.chunk.js" responded 200 in 0.2531 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/css/899.21d34220.chunk.css" responded 200 in 0.5155 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/549.d94347d9.chunk.js" responded 200 in 5.0690 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/899.68673d25.chunk.js" responded 200 in 5.7715 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/bcp-config.json" responded 200 in 30.1345 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/738.c7b92eac.chunk.js" responded 200 in 0.5368 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/160.19d20a8d.chunk.js" responded 200 in 0.2594 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/598.46d9e9a5.chunk.js" responded 200 in 0.5891 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/203.a2923d0a.chunk.js" responded 200 in 0.2463 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/619.8c24313d.chunk.js" responded 200 in 0.3644 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/media/FiraCode-Medium.1bc138a84f63b384c3f2.woff2" responded 200 in 2.6613 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/editor.a85ce25e.js" responded 200 in 3.7439 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/json.45f3c3ad.js" responded 200 in 5.3801 ms
10/18/2022 11:12:55 HTTP "GET" "/graphql/static/js/graphql.worker.1e36c99e.js" responded 200 in 17.1363 ms
10/18/2022 11:12:56 HTTP "POST" "/graphql" responded 200 in 823.5790 ms
10/18/2022 11:12:56 HTTP "POST" "/graphql" responded 200 in 40.2195 ms
10/18/2022 11:12:56 HTTP "GET" "/graphql/static/media/codicon.ade705761eb7e702770d.ttf" responded 200 in 4.0973 ms
10/18/2022 11:12:58 HTTP "POST" "/graphql" responded 400 in 16.9103 ms
10/18/2022 11:13:04 HTTP "POST" "/graphql" responded 400 in 0.4154 ms
10/18/2022 11:13:05 HTTP "POST" "/graphql" responded 400 in 1.0656 ms
10/18/2022 11:13:09 HTTP "GET" "/graphql/static/js/992.ed31c4da.chunk.js" responded 200 in 0.6858 ms
10/18/2022 11:13:09 HTTP "GET" "/graphql/static/js/301.87a89801.chunk.js" responded 200 in 0.8537 ms
10/18/2022 11:13:10 HTTP "GET" "/graphql/static/js/928.18f52343.chunk.js" responded 200 in 0.0838 ms
10/18/2022 11:13:10 HTTP "GET" "/graphql/static/js/646.03849ed1.chunk.js" responded 200 in 0.5385 ms
10/18/2022 11:13:25 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:13:25 HTTP "POST" "/graphql" responded 200 in 742.1462 ms
10/18/2022 11:13:40 HTTP "POST" "/graphql" responded 200 in 4.0549 ms
10/18/2022 11:13:44 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:13:44 HTTP "POST" "/graphql" responded 200 in 5.7958 ms
10/18/2022 11:13:45 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:13:45 HTTP "POST" "/graphql" responded 200 in 6.8224 ms
10/18/2022 11:13:48 HTTP "POST" "/graphql" responded 200 in 0.9162 ms
10/18/2022 11:13:49 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:13:49 HTTP "POST" "/graphql" responded 200 in 4.4718 ms
10/18/2022 11:13:51 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:13:51 HTTP "POST" "/graphql" responded 200 in 4.8932 ms
10/18/2022 11:13:52 HTTP "POST" "/graphql" responded 200 in 1.0188 ms
10/18/2022 11:13:54 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:13:54 HTTP "POST" "/graphql" responded 200 in 24.6167 ms
10/18/2022 11:13:55 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:13:55 HTTP "POST" "/graphql" responded 200 in 6.3244 ms
10/18/2022 11:13:59 HTTP "POST" "/graphql" responded 200 in 1.0335 ms
10/18/2022 11:14:00 HTTP "POST" "/graphql" responded 200 in 0.9383 ms
10/18/2022 11:14:01 HTTP "POST" "/graphql" responded 200 in 0.9155 ms
10/18/2022 11:14:12 HTTP "POST" "/graphql" responded 200 in 0.8922 ms
10/18/2022 11:14:14 HTTP "POST" "/graphql" responded 200 in 1.3469 ms
10/18/2022 11:14:31 HTTP "POST" "/graphql" responded 200 in 0.9800 ms
10/18/2022 11:14:32 HTTP "POST" "/graphql" responded 200 in 0.9313 ms
10/18/2022 11:14:37 HTTP "POST" "/graphql" responded 200 in 1.1699 ms
10/18/2022 11:14:41 HTTP "POST" "/graphql" responded 200 in 0.9723 ms
10/18/2022 11:14:52 HTTP "POST" "/graphql" responded 200 in 1.2889 ms
10/18/2022 11:14:54 HTTP "POST" "/graphql" responded 200 in 0.8707 ms
10/18/2022 11:15:08 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:08 HTTP "POST" "/graphql" responded 200 in 6.3842 ms
10/18/2022 11:15:09 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:09 HTTP "POST" "/graphql" responded 200 in 4.6285 ms
10/18/2022 11:15:14 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:14 HTTP "POST" "/graphql" responded 200 in 6.8618 ms
10/18/2022 11:15:20 HTTP "POST" "/graphql" responded 200 in 1.2393 ms
10/18/2022 11:15:21 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:21 HTTP "POST" "/graphql" responded 200 in 5.7129 ms
10/18/2022 11:15:36 HTTP "POST" "/graphql" responded 200 in 0.8839 ms
10/18/2022 11:15:37 HTTP "POST" "/graphql" responded 200 in 0.8751 ms
10/18/2022 11:15:40 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:40 HTTP "POST" "/graphql" responded 200 in 7.9105 ms
10/18/2022 11:15:45 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:45 HTTP "POST" "/graphql" responded 200 in 5.4070 ms
10/18/2022 11:15:52 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:52 HTTP "POST" "/graphql" responded 200 in 4.8464 ms
10/18/2022 11:15:58 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:15:58 HTTP "POST" "/graphql" responded 200 in 6.2734 ms
10/18/2022 11:27:39 HTTP "POST" "/graphql" responded 200 in 762.5949 ms
10/18/2022 11:27:39 HTTP "GET" "/graphql-voyager" responded 200 in 79.0937 ms
10/18/2022 11:27:40 HTTP "POST" "/graphql" responded 200 in 2.5361 ms
10/18/2022 11:27:40 HTTP "GET" "/favicon.ico" responded 404 in 0.0875 ms
10/18/2022 11:30:14 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = {brand}"
10/18/2022 11:30:15 HTTP "POST" "/graphql" responded 500 in 1197.0659 ms
10/18/2022 11:30:21 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = {brand}"
10/18/2022 11:30:21 HTTP "POST" "/graphql" responded 500 in 38.9273 ms
10/18/2022 11:30:23 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = {brand}"
10/18/2022 11:30:23 HTTP "POST" "/graphql" responded 500 in 39.0755 ms
10/18/2022 11:39:48 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = {brand}"
10/18/2022 11:39:48 HTTP "POST" "/graphql" responded 200 in 351663.1735 ms
10/18/2022 11:39:49 HTTP "GET" "/graphql-voyager" responded 200 in 60.7544 ms
10/18/2022 11:39:49 HTTP "POST" "/graphql" responded 200 in 55.8368 ms
10/18/2022 11:39:56 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:39:56 HTTP "POST" "/graphql" responded 200 in 5577.3608 ms
10/18/2022 11:39:59 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:39:59 HTTP "POST" "/graphql" responded 200 in 14.9020 ms
10/18/2022 11:40:00 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:40:00 HTTP "POST" "/graphql" responded 200 in 4.0586 ms
10/18/2022 11:40:03 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:40:03 HTTP "POST" "/graphql" responded 200 in 4.4856 ms
10/18/2022 11:40:13 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:40:13 HTTP "POST" "/graphql" responded 200 in 8.4728 ms
10/18/2022 11:40:17 HTTP "POST" "/graphql" responded 200 in 2.5089 ms
10/18/2022 11:40:18 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:40:18 HTTP "POST" "/graphql" responded 200 in 43.7918 ms
10/18/2022 11:40:26 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:40:26 HTTP "POST" "/graphql" responded 500 in 44.0808 ms
10/18/2022 11:40:28 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:40:28 HTTP "POST" "/graphql" responded 200 in 75.7427 ms
10/18/2022 11:40:34 ====== Postgres Call -> Stored Function ======
	"sf_product_get_all"
10/18/2022 11:40:34 HTTP "POST" "/graphql" responded 200 in 4.2604 ms
10/18/2022 11:40:37 HTTP "POST" "/graphql" responded 200 in 1.1732 ms
10/18/2022 11:40:38 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:40:38 HTTP "POST" "/graphql" responded 200 in 12.2488 ms
10/18/2022 11:42:43 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:42:43 HTTP "POST" "/graphql" responded 200 in 4.4684 ms
10/18/2022 11:43:40 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:43:56 HTTP "POST" "/graphql" responded 200 in 15574.9126 ms
10/18/2022 11:44:34 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = '@brand'"
10/18/2022 11:44:45 HTTP "POST" "/graphql" responded 200 in 11664.0855 ms
10/18/2022 11:44:46 HTTP "GET" "/graphql-voyager" responded 200 in 2.4477 ms
10/18/2022 11:44:46 HTTP "POST" "/graphql" responded 200 in 1.3578 ms
10/18/2022 11:44:47 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = @brand"
10/18/2022 11:44:55 HTTP "POST" "/graphql" responded 200 in 7827.2041 ms
10/18/2022 11:45:05 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = @brand"
10/18/2022 11:45:05 HTTP "POST" "/graphql" responded 200 in 7.4609 ms
10/18/2022 11:45:06 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = @brand"
10/18/2022 11:45:06 HTTP "POST" "/graphql" responded 200 in 5.4221 ms
10/18/2022 11:45:07 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = @brand"
10/18/2022 11:45:07 HTTP "POST" "/graphql" responded 200 in 8.4567 ms
10/18/2022 11:45:08 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = @brand"
10/18/2022 11:45:08 HTTP "POST" "/graphql" responded 200 in 9.8299 ms
10/18/2022 11:45:54 HTTP "GET" "/graphql-voyager" responded 200 in 3.7844 ms
10/18/2022 11:45:54 HTTP "POST" "/graphql" responded 200 in 1.2918 ms
10/18/2022 11:45:56 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = @brand"
10/18/2022 11:45:56 HTTP "POST" "/graphql" responded 200 in 32.7106 ms
10/18/2022 11:46:02 ====== Postgres Call -> SQL ======
	"SELECT * 
FROM product
Where brand = @brand"
10/18/2022 11:46:02 HTTP "POST" "/graphql" responded 200 in 7.6212 ms
